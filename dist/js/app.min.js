/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.addEventListener('DOMContentLoaded', () => {\n  const map = L.map('map').setView([20, 0], 2);\n\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  }).addTo(map);\n\n  const earthquakesLayer = L.layerGroup().addTo(map);\n\n  fetch('https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=' +   getDateForPeriod('week') + '&minmagnitude=4.5')\n    .then(res => res.json())\n    .then(data => {\n      document.getElementById('earthquakes-list').innerHTML = '';\n\n      data.features.forEach(quake => {\n        addEarthquakeToMap(quake, earthquakesLayer);\n        addEarthquakeToList(quake);\n      });\n\n    })\n    .catch(error => {\n      console.error('Ошибка загрузки данных:', error);\n      document.getElementById('earthquakes-list').innerHTML = '<li>Ошибка загрузки данных.</li>'\n    });\n\n  function getDateForPeriod(period) {\n    const date = new Date();\n    switch(period) {\n      case 'day':\n        date.setDate(date.getDate() - 1);\n        break;\n      case 'week':\n        date.setDate(date.getDate() - 7);\n        break;\n      case 'month':\n        date.setMonth(date.getMonth() - 1);\n        break;\n    }\n    return date.toISOString().split('T')[0];\n  }\n\n  function addEarthquakeToMap(quake, layer) {\n    const lat = quake.geometry.coordinates[1];\n    const lng = quake.geometry.coordinates[0];\n    const magnitude = quake.properties.mag;\n\n    const radius = Math.max(5, magnitude * 2);\n    const color = getMagnitudeColor(magnitude);\n\n    const marker = L.circleMarker([lat, lng], {\n      radius: radius,\n      fillColor: color,\n      color: '#fff',\n      weight: 1,\n      opacity: 1,\n      fillOpacity: 0.7\n    }).addTo(layer);\n\n    marker.bindPopup(createPopupContent(quake));\n\n    marker.quakeId = quake.id;\n  }\n\n  function addEarthquakeToList(quake) {\n    const listElement = document.getElementById('earthquakes-list');\n    const listItem = document.createElement('li');\n    listItem.classList.add('earthquake-item');\n\n    const magnitude = quake.properties.mag;\n    const magnitudeClass = getMagnitudeClass(magnitude);\n\n    const location = quake.properties.place || 'Неизвестное положение';\n    const time = new Date(quake.properties.time).toLocaleString();\n\n    listItem.innerHTML = `\n      <span class=\"magnitude\" ${magnitudeClass}>${magnitude.toFixed(1)}</span>\n      <div class=\"earthquake-info\">\n        <div class=\"location\">${location}</div>\n        <div class=\"time\">${time}</div>\n      </div>\n    `;\n\n    listItem.addEventListener('click', () => {\n      const lat = quake.geometry.coordinates[1];\n      const lng = quake.geometry.coordinates[0];\n\n      map.setView([lat, lng], 6);\n\n      earthquakesLayer.eachLayer(layer => {\n        if (layer.quakeId === quake.id) {\n          layer.openPopup();\n        }\n      });\n    });\n\n    listElement.appendChild(listItem);\n  }\n\n  function getMagnitudeColor(magnitude) {\n    if (magnitude >= 6.0) return '#f44336';\n    if (magnitude >= 5.0) return '#ff9800';\n    return '#4caf50';\n  }\n\n  function getMagnitudeClass(magnitude) {\n    if (magnitude >= 6.0) return 'magnitude-high';\n    if (magnitude >= 5.0) return 'magnitude-medium';\n    return 'magnitude-low';\n  }\n\n  function createPopupContent(quake) {\n    const magnitude = quake.properties.mag;\n    const location = quake.properties.place || 'Неизвестное положение';\n    const depth = quake.geometry.coordinates[2];\n    const time = new Date(quake.properties.time).toLocaleString();\n    const url = quake.properties.url;\n\n    return `\n      <div class=\"popup-content\">\n        <h3>Землетрясение M${magnitude.toFixed(1)}</h3>\n        <p><strong>Местоположение:</strong> ${location}</p>\n        <p><strong>Глубина:</strong> ${depth} км</p>\n        <p><strong>Время:</strong> ${time}</p>\n        <p><a href=\"${url}\" target=\"_blank\">Подробнее на сайте USGS</a></p>\n      </div>\n    `;\n  }\n\n});\n\n//# sourceURL=webpack://earthquakemap/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;